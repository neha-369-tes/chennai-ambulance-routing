# üöë Chennai Emergency Ambulance Routing System - Foundation Build

Build a **real-world ambulance routing system** for Chennai that finds the **fastest route to the nearest hospital** using actual hospital locations and traffic-aware routing. Focus on building a solid foundation with real data integration.

---

## üéØ Primary Goal

Create a production-ready foundation that:
1. **Maps all major hospitals in Chennai** with real coordinates and capabilities
2. **Implements intelligent routing** that considers traffic patterns and road conditions
3. **Shows real-time ambulance movement** along optimal routes
4. **Provides responsive, professional dashboard** for emergency dispatchers

---

## üè• Chennai Hospital Data Integration

### Required Hospital Database (JSON format)
```json
{
  "hospitals": [
    {
      "id": "apollo_greams",
      "name": "Apollo Hospital Greams Road",
      "coordinates": [13.0569, 80.2497],
      "type": "multi_specialty",
      "emergency_level": "level_1_trauma",
      "capacity": "high",
      "specialties": ["cardiology", "neurology", "emergency", "trauma"]
    },
    {
      "id": "fortis_malar",
      "name": "Fortis Malar Hospital",
      "coordinates": [13.0739, 80.2177],
      "type": "multi_specialty",
      "emergency_level": "level_1_trauma",
      "capacity": "high"
    },
    {
      "id": "stanley_medical",
      "name": "Stanley Medical College Hospital",
      "coordinates": [13.0908, 80.2747],
      "type": "government",
      "emergency_level": "level_1_trauma",
      "capacity": "very_high",
      "cost": "free"
    },
    {
      "id": "vijaya_hospital",
      "name": "Vijaya Hospital Vadapalani",
      "coordinates": [13.0493, 80.2137],
      "type": "multi_specialty",
      "emergency_level": "level_2",
      "capacity": "medium"
    },
    {
      "id": "gleneagles",
      "name": "Gleneagles Global Hospital",
      "coordinates": [13.0077, 80.2419],
      "type": "multi_specialty",
      "emergency_level": "level_1_trauma",
      "capacity": "high"
    }
  ]
}
```

---

## üõ£Ô∏è Chennai Traffic Pattern Analysis

### Peak Traffic Hours (implement in routing logic):
- **Morning Rush**: 8:00 AM - 10:30 AM (multiplier: 1.8x travel time)
- **Evening Rush**: 6:00 PM - 9:00 PM (multiplier: 2.2x travel time)
- **Lunch Rush**: 12:30 PM - 2:00 PM (multiplier: 1.4x travel time)
- **Weekend Evenings**: Saturday 7:00 PM - 10:00 PM (multiplier: 1.6x travel time)

### High Congestion Zones:
- **T. Nagar Commercial Area**: [13.0418, 80.2341] (radius: 2km)
- **Anna Salai Corridor**: [13.0605, 80.2496] (radius: 1.5km)
- **Vadapalani Junction**: [13.0493, 80.2137] (radius: 1km)
- **Guindy Industrial Area**: [12.9915, 80.2207] (radius: 2.5km)
- **Porur IT Corridor**: [13.0358, 80.1565] (radius: 3km)

---

## üì± Frontend Requirements (React + Leaflet)

### Professional Emergency Dashboard Layout:
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                    üö® CHENNAI EMS DISPATCH                  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                      ‚îÇ  üìç EMERGENCY DETAILS               ‚îÇ
‚îÇ      LIVE MAP        ‚îÇ  Location: [Auto-detect/Manual]      ‚îÇ
‚îÇ   (70% width)        ‚îÇ  Emergency Type: [Medical/Trauma]    ‚îÇ
‚îÇ                      ‚îÇ  Priority: [Critical/High/Medium]    ‚îÇ
‚îÇ  ‚Ä¢ Hospital markers  ‚îÇ                                      ‚îÇ
‚îÇ  ‚Ä¢ Route overlay     ‚îÇ  üè• NEAREST HOSPITALS               ‚îÇ
‚îÇ  ‚Ä¢ Traffic zones     ‚îÇ  1. Apollo Greams (4.2km - 8min)    ‚îÇ
‚îÇ  ‚Ä¢ Ambulance icon    ‚îÇ  2. Stanley Medical (6.1km - 12min) ‚îÇ
‚îÇ                      ‚îÇ  3. Fortis Malar (5.8km - 15min)    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### Key Features:
- **Responsive design** (works on tablets used in ambulances)
- **High contrast colors** for emergency visibility
- **One-click hospital selection**
- **ETA updates every 30 seconds**
- **Route optimization button**

---

## üß† Intelligent Routing Logic

### Route Selection Algorithm:
```javascript
function findOptimalHospital(emergencyLocation, emergencyType, currentTime) {
  const trafficMultiplier = getTrafficMultiplier(currentTime);
  const hospitals = filterHospitalsByCapability(emergencyType);
  
  return hospitals.map(hospital => {
    const baseDistance = calculateDistance(emergencyLocation, hospital.coordinates);
    const baseTravelTime = baseDistance / AVERAGE_SPEED;
    const adjustedTime = baseTravelTime * trafficMultiplier * getCongestionFactor(hospital.area);
    
    return {
      hospital,
      estimatedTime: adjustedTime,
      distance: baseDistance,
      route: generateRoute(emergencyLocation, hospital.coordinates)
    };
  }).sort((a, b) => a.estimatedTime - b.estimatedTime);
}
```

---

## üèóÔ∏è Technical Stack & Architecture

### Backend (Node.js + Express):
- **Real-time routing engine** using Leaflet Routing Machine or OSRM
- **Hospital database** with capabilities and real-time status
- **Traffic pattern integration** based on time/day
- **WebSocket** for live updates
- **RESTful API** for emergency dispatch

### Frontend (React + Vite):
- **React-Leaflet** for mapping with Chennai OpenStreetMap tiles
- **Real-time ambulance tracking** with smooth animations
- **Hospital markers** with popup details (capacity, specialties, ETA)
- **Route visualization** with different colors for traffic conditions
- **Responsive design** using CSS Grid/Flexbox

### Key Endpoints:
- `POST /api/emergency` - Create new emergency call
- `GET /api/hospitals/nearest` - Get nearest hospitals with ETAs
- `GET /api/route/:hospitalId` - Get optimized route to specific hospital
- `WebSocket /ws` - Real-time ambulance position updates

---

## üé® UI/UX Design Principles

### Emergency-First Design:
- **Red/Green color scheme** for urgency/safety
- **Large, touch-friendly buttons** (min 44px)
- **Clear typography** (Open Sans, 16px minimum)
- **Minimal cognitive load** - essential info only
- **Dark mode support** for night shifts

### Mobile Responsiveness:
- **Tablet-optimized** (ambulance mounted tablets)
- **One-handed operation** capability
- **Offline functionality** for network dead zones
- **Voice announcements** for turn-by-turn navigation

---

## üöÄ Implementation Steps

### Phase 1: Foundation (Current Build)
1. Set up React + Node.js project structure
2. Integrate Chennai hospital database
3. Implement basic Leaflet map with hospital markers
4. Create responsive emergency dashboard layout
5. Add hospital selection and ETA calculation

### Phase 2: Smart Routing (Next Sprint)
1. Integrate traffic-aware routing algorithm
2. Add real-time ambulance simulation
3. Implement WebSocket for live updates
4. Add route optimization based on current conditions

### Phase 3: Advanced Features (Future)
1. Integration with n8n traffic management
2. Multi-ambulance coordination
3. Hospital capacity management
4. Historical data analytics

---

## üß™ Testing Scenarios

### Simulate Real Emergencies:
- **Heart Attack in T. Nagar** (peak traffic area)
- **Road Accident on ECR** (highway scenario)
- **Stroke in Velachery** (residential area)
- **Industrial Accident in Guindy** (specialized trauma need)

### Performance Benchmarks:
- **Route calculation**: < 2 seconds
- **ETA accuracy**: ¬± 15% of actual time
- **Map load time**: < 3 seconds on 4G
- **Hospital selection**: < 1 second response

---

## üîß Environment Configuration

### Required Environment Variables:
```bash
# Backend
PORT=3000
NODE_ENV=development
HOSPITAL_DB_PATH=./data/chennai_hospitals.json
TRAFFIC_API_KEY=optional_for_real_traffic_data

# Frontend
VITE_API_BASE_URL=http://localhost:3000
VITE_MAP_CENTER_LAT=13.0827
VITE_MAP_CENTER_LNG=80.2707
```

---

## ‚úÖ Definition of Done (Foundation)

- [ ] Chennai hospital database loaded and displayed on map
- [ ] Responsive dashboard layout working on desktop and tablet
- [ ] Basic distance-based hospital ranking functional
- [ ] Professional emergency-focused UI design implemented
- [ ] Route visualization working between any point and selected hospital
- [ ] ETA calculation considering basic traffic patterns
- [ ] Hospital selection updates route and calculations
- [ ] Mobile-responsive design tested on multiple screen sizes

---

## üìù Additional Notes for Replit

- Use **Chennai-specific coordinates** as default map center: `[13.0827, 80.2707]`
- Implement **error handling** for offline scenarios
- Add **loading states** for all async operations
- Include **accessibility features** (ARIA labels, keyboard navigation)
- Use **semantic HTML** for screen reader compatibility
- Implement **progressive web app** features for ambulance tablet installation

---

**Build this as a professional emergency response tool - lives depend on it working flawlessly!**